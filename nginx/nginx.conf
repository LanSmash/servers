#
# Valve SteamPipe Reverse Proxy Configuration for nginx on Ubuntu.
# by Brian Astrolox Wojtczak, May 2013.
#
# Modified By JB Hewitt & Simon Pilot (Webberist) for LanSmash
#
# For caching steam content when lots of gamers are attempting to use 
# a single low speed high contention connection to the internet
# (e.g. LAN parties).
#
# Based on configuration written by Steven Hartland at Multiplay
# http://blog.multiplay.co.uk/2013/04/caching-steam-downloads-lans/
#
# Changed in the following ways:
#
#   1/ Tweaked for Ubuntu Linux rather than FreeBSD 
#		(can be tweaked to work on FreeBSD again of course).
#		NB. Will probably work on Debian without modification.
#
#   2/ Will steam cache content other than the main depots, such as the
#		big images and videos used on the store and	community pages. 
#		Will honour source set expiry dates, privcy flags, etc.
#
#	3/ Created a per user bandwidth limit
#
#	4/ Blocked crash reports from being sent to valve
#
#	5/ Ensured that the correct Host header is always returned
#

#######################################################################
# This configuration is intended to be used with the following DNS
# configuration - tested using Acrylic DNS Proxy.
#
# # Ensure that these are the same as in the real world as steam needs
# # to communicate directly to valve on these hostnames. Redirecting
# # them to your nginx server will prevent logins and game purchases.
# 208.64.200.189 gds1.steampowered.com
# 208.64.200.190 gds2.steampowered.com
# 208.64.200.191 gds3.steampowered.com
# 208.78.164.7 gds4.steampowered.com
# 208.64.202.69 store.steampowered.com
# 63.235.4.133 support.steampowered.com
# 
# # Use the IP of your nginx server in place of <YourIP>
# <YourIP> *.cs.steampowered.com
# <YourIP> *.steampowered.com
#
#######################################################################

# NB. You should change the ulimit for nginx to be as high as possible. 
# If you do not then you'll get a "Too many open files" error.
# On Ubuntu edit /etc/default/nginx and uncomment the ulimit line.

user www-data;
worker_processes 16;
#boss says nar to increasing limits, I can't be bothered coding a generic script to increase system config on all servers
#worker_rlimit_nofile 30000;
pid /var/run/nginx.pid;

error_log /var/log/nginx/error.log;

events {
	#worker_connections 30000;
	worker_connections 8192;
	multi_accept on;

	# kqueue (FreeBSD 4.1+), epoll (Linux 2.6+), rt signals (Linux 2.2.19+)
	# /dev/poll (Solaris 7 11/99+), event ports (Solaris 10), select, and poll
	use epoll;
	#use kqueue;
}

http {
	include mime.types;

	### could disable these to speed things up
	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	### large file optimizations 
	types_hash_max_size 2048;
	default_type application/octet-stream;
	output_buffers 1 512k;
	send_timeout 10s;
	tcp_nopush off;
	sendfile on;
	tcp_nodelay on;
	gzip off;
	reset_timedout_connection on;
	server_names_hash_bucket_size 512;
	keepalive_timeout 10s;

#        sendfile on;
#        tcp_nopush on;
#        tcp_nodelay on;
#        types_hash_max_size 2048;
#        keepalive_timeout 65;

	resolver 8.8.8.8;
	resolver_timeout 30s;

	# You may wish to limit the "speed of transmission of the answer to client"
	# in order to support more clients simultaneously. However it's probably
	# sensible to only impose the limit after a set amount of data has been
	# sent (per request); this results in small files being fast (most requests)
	# and large files being non-intrusive (aka slower).
	#        limit_rate_after 10m;
	#        limit_rate 2048k;

	proxy_cache_path  /var/proxy/nginx/cs.steampowered.com levels=1:2 keys_zone=CS:10m
			inactive=72h max_size=1g;

	proxy_cache_path  /var/proxy/nginx/steampowered.com levels=2:2 keys_zone=OTHER:100m
			inactive=72h max_size=1g;

	#proxy_cache_path /var/proxy/nginx/L3 levels=1:2 keys_zone=L3:10m
	#		inactive=72h max_size=1g;

	proxy_cache_key "$scheme$host$request_uri$cookie_user";

	#original bsd settings
	#http://blog.multiplay.co.uk/2013/04/caching-steam-downloads-lans/

	#default server
	#give out proxy auto config files
	#all other pages were directed here by poisoned DNS (RPZ)
	server {
		listen 80 default_server;
		server_name _;
		root /var/www;

	}


	# Prevent steam crash logs from being submitted to valve - just
	# in case our man in the middle reverse proxy is the cause.  Requires crash. subdomain to be redirected
	server {
		listen *:80;
		server_name crash.steampowered.com;
	
		location / {
			satisfy all;
			deny all;
	
			access_log /var/log/nginx/crash.steampowered.com-access.log;
			error_log /var/log/nginx/crash.steampowered.com-error.log;
		}
	}

	#content server caching
	# *.cs.steampowered.com
	server {
		#for dns redirect, listen on port 80 with hostname
		listen *:80;
		server_name *.cs.steampowered.com

		#for squid proxy peer to forward request, listen on port 82
		listen 127.0.0.1:82;
		#server_name _; #can only enable listen all when using squid proxy peer
		error_page  404  /website_page_not_found.html;
		access_log /var/log/nginx/cs.steampowered.com-access.log;
		error_log /var/log/nginx/cs.steampowered.com-error.log;

		#changed to use external hdd
		#root /var/proxy/nginx/cs.steampowered.com;
		root /mnt/proxy/www/cs.steampowered.com;
		index index.html;
		resolver 8.8.8.8;

		location /depot/ {
			try_files $uri @mirror;
			access_log /var/log/nginx/cs.steampowered.com-access-depot-local;
		}

		#this section is only required for listening on port 80 and redirecting to non /depot urls
		location / {
			proxy_next_upstream error timeout http_404;
			proxy_pass http://$host$uri;
			proxy_redirect off;

			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

			proxy_cache CS; #refers to proxy_cache_key directive above for path, timeout, etc
			proxy_cache_valid 200 301 302 10m;
			proxy_cache_valid any 1m;
			proxy_cache_use_stale   error timeout invalid_header updating
			http_500 http_502 http_503 http_504;

			add_header Host $host;
			add_header X-Mirror-Upstream-Status $upstream_status;
			add_header X-Mirror-Upstream-Response-Time $upstream_response_time;
			add_header X-Mirror-Status $upstream_cache_status;

			access_log /var/log/nginx/cs.steampowered.com-access-other.log;
		}

		location @mirror {
			proxy_store on;
			proxy_store_access user:rw group:rw all:r;
			proxy_next_upstream error timeout http_404;
			proxy_pass http://$host$uri;
				proxy_redirect off;

			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

			add_header Host $host;
			add_header X-Mirror-Upstream-Status $upstream_status;
			add_header X-Mirror-Upstream-Response-Time $upstream_response_time;
			add_header X-Mirror-Status $upstream_cache_status;
			access_log /var/log/nginx/cs.steampowered.com-access-depot-remote.log;
		}
	}

	# All remaining steampowered.com content can be cached here,
	#  as long as DNS is pointing at this nginx server.
	server {
		listen *:80;
		server_name *.steampowered.com;

		access_log /var/log/nginx/steampowered.com-access.log;
		error_log /var/log/nginx/steampowered.com-error.log;

		location / {
			proxy_next_upstream error timeout http_404;
			proxy_pass http://$host$uri;
			proxy_redirect off;
	
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	
			proxy_cache OTHER; #refers to proxy_cache_key directive above for path, timeout, etc
			proxy_cache_valid 200 301 302 10m;
			proxy_cache_valid any 1m;
			proxy_cache_use_stale   error timeout invalid_header updating
			http_500 http_502 http_503 http_504;

			add_header Host $host;
			add_header X-Mirror-Upstream-Status $upstream_status;
			add_header X-Mirror-Upstream-Response-Time $upstream_response_time;
			add_header X-Mirror-Status $upstream_cache_status;
		}
	}


	#
	#Cache Riotgames CDN
	#
	server {
		listen *:80;
		server_name l3cdn.riotgames.com;
	
		access_log /var/log/nginx/l3cdn.riotgames.com-access.log;
		error_log /var/log/nginx/l3cdn.riotgames.com-error.log;
	
		root /var/proxy/nginx/l3cdn.riotgames.com/;
	
		location / {
			try_files $uri @l3cdn;
			access_log /var/log/nginx/l3cdn.riotgames.com-access-local.log;
		}

		#fetch any file titled releaselisting straight from riot	
		location ~*releaselisting* {
			proxy_store off;
			proxy_next_upstream error timeout http_404;
			proxy_pass http://$host$request_uri;
			proxy_redirect off;
	
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	
			add_header Host $host;
			add_header X-Mirror-Upstream-Status $upstream_status;
			add_header X-Mirror-Upstream-Response-Time $upstream_response_time;
			add_header X-Mirror-Status $upstream_cache_status;
			access_log /var/log/nginx/l3cdn.riotgames.com-access-release.log;
		}

		location @l3cdn {
			proxy_store on;
			proxy_set_header Accept-Encoding "";
			proxy_store_access user:rw group:rw all:r;
			proxy_next_upstream error timeout http_404;
	
			proxy_pass http://$host$request_uri;
			proxy_redirect off;
			proxy_set_header Host $host:$server_port;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	
			#proxy_cache L3;
			#proxy_cache_valid 200 301 302 10m;
			#proxy_cache_valid any 1m;
			#proxy_cache_use_stale   error timeout invalid_header updating
			#http_500 http_502 http_503 http_504;
				
			#proxy_cache_key "$scheme$host$request_uri";
			#proxy_cache_valid 404 1m;
			#proxy_cache_bypass $arg_nocache;
			#proxy_cache_bypass $http_pragma $http_authorization;
	
			add_header Host $host;
			add_header X-Mirror-Upstream-Status $upstream_status;
			add_header X-Mirror-Upstream-Response-Time $upstream_response_time;
			add_header X-Mirror-Status $upstream_cache_status;
	
			access_log /var/log/nginx/l3cdn.riotgames.com-access-remote.log;
		}
	}

	#Create a limit zone for blizzard based on requested file name
	#limit_zone one $uri 10m;

	#Cache Blizzards Edgesuite CDN
	#Note: First request for each file will be cached
	#Additional range requests for each file will be passed to oringinal server until first request is fully downloaded

	server {
		listen *:80;
		server_name dist.blizzard.com.edgesuite.net;

		access_log /var/log/nginx/dist.blizzard.com.edgesuite.net-access.log;
		error_log /var/log/nginx/dist.blizzard.com.edgesuite.net-error.log;
	
		root /var/proxy/nginx/blizzard.com/;
		location / {
			try_files $uri @es-cache;
			access_log /var/log/nginx/blizzard.com-local.log;
		}

		location @es-cache {
			#limit_conn one 1;
			error_page     503 = @es-pass;
			proxy_store on;
			proxy_store_access user:rw group:rw all:r;
			proxy_next_upstream error timeout http_404;
			proxy_pass http://$host$uri;
			proxy_redirect off;
			proxy_pass_request_headers off;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			add_header Host $host;
			add_header X-Mirror-Upstream-Status $upstream_status;
			add_header X-Mirror-Upstream-Response-Time $upstream_response_time;
			add_header X-Mirror-Status $upstream_cache_status;
	
			access_log /var/log/nginx/blizzard.com-cache-remote.log;	
		}

		location @es-pass {
			proxy_store on;
			proxy_store_access user:rw group:rw all:r;
			proxy_next_upstream error timeout http_404;
			proxy_pass http://$host$uri;
			proxy_redirect off;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			add_header Host $host;
			add_header X-Mirror-Upstream-Status $upstream_status;
			add_header X-Mirror-Upstream-Response-Time $upstream_response_time;
			add_header X-Mirror-Status $upstream_cache_status;
	
			access_log /var/log/nginx/blizzard.com-pass-remote.log;	
		}

	}

	#Cache Blizzards llnw CDN
	#Note: First request for each file will be cached
	#Additional range requests for each file will be passed to oringinal server until first request is fully downloaded
	server {
		listen *:80;
		server_name llnw.blizzard.com;

		access_log /var/log/nginx/llnw.blizzard.com-access.log;
		error_log /var/log/nginx/llnw.blizzard.com-error.log;

		root /var/proxy/nginx/blizzard.com/;
		location / {
			try_files $uri @llnw-cache;
			access_log /var/log/nginx/blizzard.com-local.log;
		}

		location @llnw-cache {
			#limit_conn one 1;
			error_page     503 = @llnw-pass;
			proxy_store on;
			proxy_store_access user:rw group:rw all:r;
			proxy_next_upstream error timeout http_404;
			proxy_pass http://$host$uri;
			proxy_redirect off;
			proxy_pass_request_headers off;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

			add_header Host $host;
			add_header X-Mirror-Upstream-Status $upstream_status;
			add_header X-Mirror-Upstream-Response-Time $upstream_response_time;
			add_header X-Mirror-Status $upstream_cache_status;

			access_log /var/log/nginx/blizzard.com-cache-remote.log;
		}
		
		location @llnw-pass {
			proxy_store on;
			proxy_store_access user:rw group:rw all:r;
			proxy_next_upstream error timeout http_404;
			proxy_pass http://$host$uri;
			proxy_redirect off;
	
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	
			add_header Host $host;
			add_header X-Mirror-Upstream-Status $upstream_status;
			add_header X-Mirror-Upstream-Response-Time $upstream_response_time;
			add_header X-Mirror-Status $upstream_cache_status;
	
			access_log /var/log/nginx/blizzard.com-pass-remote.log;
		}
	}



	#Cache Blizzards Game Installers
	server {
		listen *:80;
		server_name dist.blizzard.com;
	
		access_log /var/log/nginx/dist.blizzard.com-access.log;
		error_log /var/log/nginx/dist.blizzard.com-error.log;
	
		root /var/www/dist.blizzard.com/;
		location / {
			#first try local then download the file 1x from original server then pass through the 206 chunks
			try_files $uri @blizzard-install;
			access_log /var/log/nginx/dist.blizzard.com-local.log;
		}

		location @blizzard-install {
			proxy_store on;
			proxy_store_access user:rw group:rw all:r;
			proxy_next_upstream error timeout http_404;
			proxy_pass http://$host$uri;
			proxy_redirect off;

			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

			add_header Host $host;
			add_header X-Mirror-Upstream-Status $upstream_status;
			add_header X-Mirror-Upstream-Response-Time $upstream_response_time;
			add_header X-Mirror-Status $upstream_cache_status;
		}
	}
	
}
	
