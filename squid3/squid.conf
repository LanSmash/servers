# the 3128 intercept port requires a port redirect nat rule
#weby@proxy:~$ sudo iptables -L -t nat
#Chain PREROUTING (policy ACCEPT)
#target     prot opt source               destination         
#REDIRECT   tcp  --  anywhere             anywhere             tcp dpt:http redir ports 3128

# experiment - attempt to mark hits
qos_flows tos local-hit=0x30
qos_flows mark local-hit=0x30

http_port 3128 intercept
http_port 8080
icp_port 7
#dns_v4_first off
#pid_filename /var/run/squid.pid
#cache_effective_user proxy
#cache_effective_group proxy
#error_default_language en
#icon_directory /usr/local/etc/squid/icons
visible_hostname proxy.ls
cache_mgr lansmash@lansmash.ls
#cache_store_log none
cache_store_log /var/log/squid3/store.log
#sslcrtd_children 0
logfile_rotate 7
#debug_options rotate=1 ALL,1 64,6

# default wait for 30seconds before terminating
shutdown_lifetime 3 seconds
# Allow local network(s) on interface(s)
acl localnet src  10.0.0.0/8 192.168.0.0/16

#uri_whitespace strip

cache_mem 32 MB
maximum_object_size_in_memory 32 KB
memory_replacement_policy heap GDSF
cache_replacement_policy heap LFUDA

# 28GBish cache
cache_dir ufs /var/proxy 28000 64 256
minimum_object_size 0 KB
maximum_object_size 10 GB
#offline_mode on
cache_swap_low 90
cache_swap_high 95
	
# Add any of your own refresh_pattern entries above these.
refresh_pattern ^ftp:    1440  20%  10080
refresh_pattern ^gopher:  1440  0%  1440
refresh_pattern -i (/cgi-bin/|\?) 0  0%  0
refresh_pattern .    0  20%  4320
# No redirector configured

# Setup some default acls
acl allsrc src all
acl localhost src 127.0.0.1/32
acl safeports port 21 70 80 210 280 443 488 563 591 631 777 901  3128 1025-65535 
acl sslports port 443 563  
acl manager proto cache_object
acl purge method PURGE
acl connect method CONNECT
acl HTTP proto HTTP
acl HTTPS proto HTTPS

http_access allow manager localhost
http_access deny manager
http_access allow purge localhost
http_access deny purge
http_access deny !safeports
http_access deny CONNECT !sslports

# Always allow localhost connections
http_access allow localhost
request_body_max_size 0 KB

#delay_pools 1
#delay_class 1 2
#delay_parameters 1 -1/-1 102400/102400
#delay_initial_bucket_level 100
#delay_access 1 allow allsrc

# Custom options
#log url terms after ?
strip_query_terms off

#Partial HTTP replies (206) can't be cached.  Used by Origin and Blizard.
#Set range offset limit to -1 to download a full file each time a partial is requested.
#Warning: This is will be a DOS style download as every part requested will trigger a full download by squid.
#probably better to scan access.log and download each url using wget.
#This method causes timeouts in blizzard downloader because it doesn't get data until the entire file has been downloaded (depending on requested range I think)
#correction, I believe client still gets 206 response even though server is still downloading from beginning of file, see HTTP1.1 standard.

#range_offset_limit -1
#only download full file if start of range is within the first 1KB of file.
#this way subsequent downloads will only request range from parent while squid finishes a single original download
#edit: this 1KB download full file seams to be breaking WOT downloader (200 reply returned?  Client requests range and gets full content?)
#range_offset_limit 1 KB 

#note: range_offset_limit of -1 will override any quickabort settings.
#changed quick abort to always stop downloading so we don't have useless downloads.
quick_abort_min 0 KB
quick_abort_max 0 KB

# 20160 minutes is two weeks
# refresh_pattern -i (/cgi-bin/|\?) 0  0%  0
#refresh_pattern -i (.*)blizzard.com(.*)  20160 100% 20160 refresh-ims
#reload-into-ims refresh-ims
#refresh_pattern -i (.*)leagueoflegends.com(.*)  20160 100% 20160 refresh-ims
#reload-into-ims refresh-ims

#
# use cache peer for steam, etc downloads.
#

# don't forget to add proxypeer to hostsfile or dns

acl steam_ddl url_regex http://.*/depot/.*/chunk/
acl lol_ddl url_regex http://(.*)l3cdn.riotgames.com/
#acl blizzard_ddl url_regex http://dist.blizzard.com.edgesuite.net/ /sc2-pod-retail/
#acl origin_ddl url_regex akamai.cdn.ea.com


# don't cache steam or origin as it has not yet been rewritten to a generic url
# blizzard and origin use partial downloads so they won't cache.
cache deny steam_ddl 
cache deny lol_ddl

#just use ngninx to serve it, no need to cache twice
#origin_ddl

####
# Peer definition
###

#no-delay to ensure steam downloads aren't counted in the users bandwidth
cache_peer cache.ls parent 82 0 no-query proxy-only no-delay no-digest
cache_peer_access cache.ls allow steam_ddl 


#range_offset_limit requires squid 3.2+
#convert partial range request to no range request

#origin_ddl blizzard_ddl

#Disable direct connection preference so peer is used when non positive hit.
#Will fall back to direct if peer unavailable
prefer_direct off

#prefer peer even if not optimal from content types
nonhierarchical_direct off

# Setup allowed acls
# Allow local network(s) on interface(s)
http_access allow localnet
http_access deny allsrc
